/*
 * MainMenu.java
 *
 * Created on 29 Mar 09, 22:44:00
 */

package apotik;
import java.awt.*;
import java.beans.PropertyVetoException;
import java.util.*;
import java.util.logging.*;
import javax.swing.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.view.*;

/**
 *
 * @author Ryan
 */
public class MainMenu extends javax.swing.JFrame {

    /** Creates new form MainMenu */
    DefaultTableModel tblModel;
    String user;
    FileObat FileObat = new FileObat();
    FileObatKosong FileObatKosong = new FileObatKosong(new JFrame(),true);
    FileSuplier FileSupplier = new FileSuplier();
    TranJual TranJual = new TranJual();
    TranRetur TranRetur = new TranRetur();
    FileUser FileUser = new FileUser();
    FileUserPassword FileUserPassword = new FileUserPassword();
    ToolBackup ToolBackup = new ToolBackup();
    ToolRestore ToolRestore = new ToolRestore();
    LapObat LapObat = new LapObat();
    LapJual LapJual = new LapJual();
    LapRetur LapRetur = new LapRetur();
    LapNonBebas LapNonBebas = new LapNonBebas();
    About About = new About();
    
    Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
    int lebar = layar.width;
    int tinggi = layar.height;

    public MainMenu() {
        initComponents();
        setSize(new Dimension(lebar, tinggi));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desk = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnFile = new javax.swing.JMenu();
        mnFileObat = new javax.swing.JMenuItem();
        mnFileSup = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JSeparator();
        mnFileUser = new javax.swing.JMenuItem();
        jSeparator6 = new javax.swing.JSeparator();
        mnFileLogout = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JSeparator();
        mnFileExit = new javax.swing.JMenuItem();
        mnTransaksi = new javax.swing.JMenu();
        mnTranJual = new javax.swing.JMenuItem();
        mnTranRetur = new javax.swing.JMenuItem();
        mnLaporan = new javax.swing.JMenu();
        mnLapObat = new javax.swing.JMenuItem();
        mnLapSup = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JSeparator();
        mnLapJual = new javax.swing.JMenuItem();
        mnLapRetur = new javax.swing.JMenuItem();
        mnLData = new javax.swing.JMenuItem();
        mnTools = new javax.swing.JMenu();
        jSeparator4 = new javax.swing.JSeparator();
        mnTBack = new javax.swing.JMenuItem();
        mnTRest = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JSeparator();
        mnTReset = new javax.swing.JMenuItem();
        mnBantuan = new javax.swing.JMenu();
        mnAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Apotik Depok | Sistem Informasi Penjualan Obat");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mnFile.setMnemonic('F');
        mnFile.setText("File");

        mnFileObat.setMnemonic('O');
        mnFileObat.setText("Obat");
        mnFileObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileObatActionPerformed(evt);
            }
        });
        mnFile.add(mnFileObat);

        mnFileSup.setMnemonic('S');
        mnFileSup.setText("Supplier");
        mnFileSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileSupActionPerformed(evt);
            }
        });
        mnFile.add(mnFileSup);
        mnFile.add(jSeparator1);

        mnFileUser.setMnemonic('U');
        mnFileUser.setText("User");
        mnFileUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileUserActionPerformed(evt);
            }
        });
        mnFile.add(mnFileUser);
        mnFile.add(jSeparator6);

        mnFileLogout.setMnemonic('L');
        mnFileLogout.setText("Logout");
        mnFileLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileLogoutActionPerformed(evt);
            }
        });
        mnFile.add(mnFileLogout);
        mnFile.add(jSeparator2);

        mnFileExit.setMnemonic('X');
        mnFileExit.setText("Exit");
        mnFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnFileExitActionPerformed(evt);
            }
        });
        mnFile.add(mnFileExit);

        jMenuBar1.add(mnFile);

        mnTransaksi.setMnemonic('T');
        mnTransaksi.setText("Transaksi");

        mnTranJual.setText("Penjualan");
        mnTranJual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTranJualActionPerformed(evt);
            }
        });
        mnTransaksi.add(mnTranJual);

        mnTranRetur.setText("Retur Penjualan");
        mnTranRetur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTranReturActionPerformed(evt);
            }
        });
        mnTransaksi.add(mnTranRetur);

        jMenuBar1.add(mnTransaksi);

        mnLaporan.setMnemonic('L');
        mnLaporan.setText("Laporan");

        mnLapObat.setText("Data Obat");
        mnLapObat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLapObatActionPerformed(evt);
            }
        });
        mnLaporan.add(mnLapObat);

        mnLapSup.setText("Data Supplier");
        mnLapSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLapSupActionPerformed(evt);
            }
        });
        mnLaporan.add(mnLapSup);
        mnLaporan.add(jSeparator3);

        mnLapJual.setMnemonic('N');
        mnLapJual.setText("Nota Penjualan");
        mnLapJual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLapJualActionPerformed(evt);
            }
        });
        mnLaporan.add(mnLapJual);

        mnLapRetur.setMnemonic('R');
        mnLapRetur.setText("Retur Penjualan");
        mnLapRetur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLapReturActionPerformed(evt);
            }
        });
        mnLaporan.add(mnLapRetur);

        mnLData.setText("Data Penjualan Obat Non-Bebas");
        mnLData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnLDataActionPerformed(evt);
            }
        });
        mnLaporan.add(mnLData);

        jMenuBar1.add(mnLaporan);

        mnTools.setMnemonic('S');
        mnTools.setText("Tools");
        mnTools.add(jSeparator4);

        mnTBack.setText("Backup Database");
        mnTBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTBackActionPerformed(evt);
            }
        });
        mnTools.add(mnTBack);

        mnTRest.setText("Restore Database");
        mnTRest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTRestActionPerformed(evt);
            }
        });
        mnTools.add(mnTRest);
        mnTools.add(jSeparator5);

        mnTReset.setText("Reset Program");
        mnTReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnTResetActionPerformed(evt);
            }
        });
        mnTools.add(mnTReset);

        jMenuBar1.add(mnTools);

        mnBantuan.setMnemonic('B');
        mnBantuan.setText("Bantuan");

        mnAbout.setText("Tentang");
        mnAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAboutActionPerformed(evt);
            }
        });
        mnBantuan.add(mnAbout);

        jMenuBar1.add(mnBantuan);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desk, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desk, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnFileLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileLogoutActionPerformed
        // TODO add your handling code here:
        this.dispose();
        update();
        new Login().setVisible(true);
        new atribut().log(Login.nama, "Logout");
}//GEN-LAST:event_mnFileLogoutActionPerformed

    private void mnFileObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileObatActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka File Obat");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        FileObat.setLocation((lebar - FileObat.getSize().width)/2,(tinggi - FileObat.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(FileObat);
        setContentPane(desk);
        FileObat.tampilTabel();
        Object brs[] = {"No","Kode","Nama"};
        tblModel = new DefaultTableModel(null,brs);
        FileObatKosong.tblObat.setModel(tblModel);
        int no = 1;
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM obat WHERE stok <= 0");
            if(rs.next())
            {
                rs.previous();
                while(rs.next())
                {
                    String kd = rs.getString("kdobat");
                    String nm = rs.getString("nmobat");
                    Object rw[] = {no,kd,nm};
                    tblModel.addRow(rw);
                    no++;
                }
                FileObatKosong.setLocationRelativeTo(this);
                FileObatKosong.setVisible(true);
                FileObatKosong.tblObat.setColumnSelectionAllowed(false);
            }
        }
        catch(SQLException e){}

        FileObat.show();
        FileObat.toFront();
        
        try {
            FileObat.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
}//GEN-LAST:event_mnFileObatActionPerformed

    private void mnFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileExitActionPerformed
        // TODO add your handling code here:
        String pesan = "Anda Yakin Ingin Menutup Aplikasi Ini??";
        int ok = JOptionPane.showConfirmDialog(null,pesan,"Konfirmasi Tutup",JOptionPane.YES_NO_OPTION);

        if (ok == 0)
        {
            new atribut().log(Login.nama, "Logout & Keluar Program");
            update();
            JOptionPane.showMessageDialog(null,"Terima Kasih","Informasi",JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_mnFileExitActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Logout & Keluar Program");
        update();
        JOptionPane.showMessageDialog(null,"Terima Kasih","Informasi",JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void mnLapObatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLapObatActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Laporan Data Obat");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        LapObat.setLocation((lebar - LapObat.getSize().width)/2,(tinggi - LapObat.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(LapObat);
        setContentPane(desk);

        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT kdsup FROM supplier");
            if(rs.next())
            {
                rs.previous();
                while(rs.next())
                {
                    LapObat.cmbKode.addItem(rs.getString("kdsup"));
                    LapObat.cmbPilih.setSelectedIndex(0);
                    LapObat.cmbKode.setSelectedIndex(0);
                }
            }
            else LapObat.cmbPilih.setEnabled(false);
        }
        catch(SQLException e){}
        LapObat.cmbKode.setEnabled(false);
        LapObat.show();
        LapObat.toFront();
         try {
            FileSupplier.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
    }//GEN-LAST:event_mnLapObatActionPerformed

    private void mnFileSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileSupActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka File Supplier");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        FileSupplier.setLocation((lebar - FileSupplier.getSize().width)/2,(tinggi - FileSupplier.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(FileSupplier);
        setContentPane(desk);
        FileSupplier.tampilTabel();
        FileSupplier.show();
        FileSupplier.toFront();
         try {
            FileSupplier.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
    }//GEN-LAST:event_mnFileSupActionPerformed

    private void mnFileUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnFileUserActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Tool Managemen User");
        int st = 0;
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT status FROM user WHERE aktif=1");
            rs.next();
            st = rs.getInt("status");
        }
        catch(SQLException e)
        {}
        desk.putClientProperty("DesktopPane.dragMode","outline");
        if(st == 1)
        {
            FileUser.setLocation((lebar - FileUser.getSize().width)/2,(tinggi - FileUser.getSize().height)/2);
            desk.removeAll();
            desk.repaint();
            desk.add(FileUser);
            setContentPane(desk);
            FileUser.show();
            FileUser.toFront();
            try {
                FileUser.setSelected(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else if(st == 0)
        {
            FileUserPassword.setLocation((lebar - FileUserPassword.getSize().width)/2,(tinggi - FileUserPassword.getSize().height)/2);
            desk.removeAll();
            desk.repaint();
            desk.add(FileUserPassword);
            setContentPane(desk);
            FileUserPassword.show();
            FileUserPassword.toFront();
            try {
                FileUserPassword.setSelected(true);
            } catch (PropertyVetoException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        menu(false);
}//GEN-LAST:event_mnFileUserActionPerformed

    private void mnTranJualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTranJualActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Transaksi Penjualan");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        TranJual.setLocation((lebar - TranJual.getSize().width)/2,(tinggi - TranJual.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(TranJual);
        setContentPane(desk);
        TranJual.show();
        TranJual.toFront();
        try {
            TranJual.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
    }//GEN-LAST:event_mnTranJualActionPerformed

    private void mnTranReturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTranReturActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Transaksi Retur Penjualan");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        TranRetur.setLocation((lebar - TranRetur.getSize().width)/2,(tinggi - TranRetur.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(TranRetur);
        setContentPane(desk);
        TranRetur.show();
        TranRetur.toFront();
        try {
            TranRetur.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
    }//GEN-LAST:event_mnTranReturActionPerformed

    private void mnLapSupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLapSupActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Laporan Data Supplier");
        String cetak[] = {"Cetak Layar","Cetak Kertas"};
        int z = JOptionPane.showOptionDialog(this, "Silahkan Pilih Mode Cetakan", getTitle(), 0, JOptionPane.QUESTION_MESSAGE, null, cetak, cetak[0]);
        if(z==0 || z==1)
        {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
            Properties systemProp = System.getProperties();

            // Ambil current dir
            String currentDir = systemProp.getProperty("user.dir");
            Connection con = new sqlConfig().db();
            HashMap<String, Object> parameter = new HashMap<String, Object>();
            parameter.put("user", Login.nama);
            parameter.put("gambar",currentDir + "/report/logo.jpg");
            if(z==0)
            {
                try {
                JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/lap_supplier.jasper", parameter, con);
                JasperViewer.viewReport(jasperPrint, false);
                } catch (JRException ex) {
                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            else
            {
                try {
                JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/lap_supplier.jasper", parameter, con);
                JasperPrintManager.printReport(jasperPrint, true);
                } catch (JRException ex) {
                Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            setCursor(Cursor.getDefaultCursor());
        }
    }//GEN-LAST:event_mnLapSupActionPerformed

    private void mnTBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTBackActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Tool Backup Database");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        ToolBackup.setLocation((lebar - ToolBackup.getSize().width)/2,(tinggi - ToolBackup.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(ToolBackup);
        setContentPane(desk);
        ToolBackup.txtBackUp.setText("backup");
        ToolBackup.txtBackUp.requestFocus();
        ToolBackup.txtBackUp.selectAll();
        ToolBackup.show();
        ToolBackup.toFront();
        try {
            ToolBackup.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
        menu(false);
    }//GEN-LAST:event_mnTBackActionPerformed

    private void mnTRestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTRestActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Tool Backup Database");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        ToolRestore.setLocation((lebar - ToolRestore.getSize().width)/2,(tinggi - ToolRestore.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(ToolRestore);
        setContentPane(desk);
        ToolRestore.show();
        ToolRestore.toFront();
        try {
            ToolRestore.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnTRestActionPerformed

    private void mnTResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnTResetActionPerformed
        // TODO add your handling code here:
        int tanya = JOptionPane.showConfirmDialog(this, "Yakin Program Akan Di-Reset?",getTitle(),JOptionPane.YES_NO_OPTION);
        if(tanya==0)
        {
            try
            {
            Connection con = new sqlConfig().db();
            String txt[] = {"TRUNCATE TABLE obat;","TRUNCATE TABLE penjualan;","TRUNCATE TABLE penjualan_detail;","TRUNCATE TABLE retur;","TRUNCATE TABLE retur_detail;","TRUNCATE TABLE supplier;","TRUNCATE TABLE user;","INSERT INTO user VALUES('Adm',MD5('Admin'),'SA','Bogor','1989-02-06','Bogor','08561456562',1,0);"};
            for(int i = 0; i < txt.length; i++)
            {
            Statement stmt = con.createStatement();
            stmt.executeUpdate(txt[i]);
            stmt.close();
            }
            con.close();
            new atribut().log(Login.nama, "Logout");
            JOptionPane.showMessageDialog(null,"Program Di-Set Ulang","Informasi",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            new Login().setVisible(true);
            }
            catch(SQLException e){System.out.println(e);}
        }
    }//GEN-LAST:event_mnTResetActionPerformed

    private void mnLapJualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLapJualActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Laporan Nota Penjualan");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        LapJual.setLocation((lebar - LapJual.getSize().width)/2,(tinggi - LapJual.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(LapJual);

        // Setting Form
        LapJual.cmbHarTglAwal.removeAllItems();
        LapJual.cmbHarTglAkhir.removeAllItems();
        LapJual.cmbHarThnAwal.removeAllItems();
        LapJual.cmbHarThnAkhir.removeAllItems();

        for(int i=1;i<=31;i++) {
            LapJual.cmbHarTglAwal.addItem(i);
            LapJual.cmbHarTglAkhir.addItem(i);
        }

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String dt = sdf.format(new Date());

        int tgl = Integer.parseInt(dt.substring(0,2))-1;
        int bln = Integer.parseInt(dt.substring(3,5))-1;
        int akhir = Integer.parseInt(dt.substring(6,10));
        int awal = akhir - 10;

        for(int i = awal;i <= akhir; i++) {
            LapJual.cmbHarThnAwal.addItem(i);
            LapJual.cmbHarThnAkhir.addItem(i);
        }

        LapJual.cmbHarTglAwal.setSelectedIndex(tgl);
        LapJual.cmbHarTglAkhir.setSelectedIndex(tgl);
        LapJual.cmbHarBlnAwal.setSelectedIndex(bln);
        LapJual.cmbHarBlnAkhir.setSelectedIndex(bln);
        LapJual.cmbHarThnAwal.setSelectedItem(akhir);
        LapJual.cmbHarThnAkhir.setSelectedItem(akhir);
        // Akhir Setting Form

         // Setting Form
        LapJual.cmbBulThnAwal.removeAllItems();
        LapJual.cmbBulThnAkhir.removeAllItems();


        for(int i = awal;i <= akhir; i++) {
            LapJual.cmbBulThnAwal.addItem(i);
            LapJual.cmbBulThnAkhir.addItem(i);
        }

        LapJual.cmbBulBlnAwal.setSelectedIndex(bln);
        LapJual.cmbBulBlnAkhir.setSelectedIndex(bln);
        LapJual.cmbBulThnAwal.setSelectedItem(akhir);
        LapJual.cmbBulThnAkhir.setSelectedItem(akhir);
        // Akhir Setting Form

        // Setting Form
        LapJual.cmbThn.removeAllItems();

        for(int i = awal;i <= akhir; i++) {
            LapJual.cmbThn.addItem(i);
        }

        LapJual.cmbThn.setSelectedItem(akhir);
        // Akhir Setting Form

        setContentPane(desk);
        LapJual.show();
        LapJual.toFront();
        try {
            LapJual.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnLapJualActionPerformed

    private void mnLapReturActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLapReturActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Laporan Nota Penjualan");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        LapRetur.setLocation((lebar - LapRetur.getSize().width)/2,(tinggi - LapRetur.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(LapRetur);

        // Setting Form
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String dt = sdf.format(new Date());

        int bln = Integer.parseInt(dt.substring(3,5))-1;
        int akhir = Integer.parseInt(dt.substring(6,10));
        int awal = akhir - 10;

        // Setting Form
        LapRetur.cmbBulThnAwal.removeAllItems();
        LapRetur.cmbBulThnAkhir.removeAllItems();


        for(int i = awal;i <= akhir; i++) {
            LapRetur.cmbBulThnAwal.addItem(i);
            LapRetur.cmbBulThnAkhir.addItem(i);
        }

        LapRetur.cmbBulBlnAwal.setSelectedIndex(bln);
        LapRetur.cmbBulBlnAkhir.setSelectedIndex(bln);
        LapRetur.cmbBulThnAwal.setSelectedItem(akhir);
        LapRetur.cmbBulThnAkhir.setSelectedItem(akhir);
        // Akhir Setting Form

        // Setting Form
        LapRetur.cmbThn.removeAllItems();

        for(int i = awal;i <= akhir; i++) {
            LapRetur.cmbThn.addItem(i);
        }

        LapRetur.cmbThn.setSelectedItem(akhir);
        // Akhir Setting Form

        setContentPane(desk);
        LapRetur.show();
        LapRetur.toFront();
        try {
            LapRetur.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnLapReturActionPerformed

    private void mnAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAboutActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka About Program");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        About.setLocation((lebar - About.getSize().width)/2,(tinggi - About.getSize().height)/2 - 15);
        desk.removeAll();
        desk.repaint();
        desk.add(About);
        setContentPane(desk);
        About.show();
        About.toFront();
        try {
            About.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnAboutActionPerformed

    private void mnLDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnLDataActionPerformed
        // TODO add your handling code here:
        new atribut().log(Login.nama, "Membuka Laporan Penjualan Obat Non-Bebas");
        desk.putClientProperty("DesktopPane.dragMode","outline");
        LapNonBebas.setLocation((lebar - LapNonBebas.getSize().width)/2,(tinggi - LapNonBebas.getSize().height)/2);
        desk.removeAll();
        desk.repaint();
        desk.add(LapNonBebas);

        // Setting Form
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String dt = sdf.format(new Date());

        int bln = Integer.parseInt(dt.substring(3,5))-1;
        int akhir = Integer.parseInt(dt.substring(6,10));
        int awal = akhir - 10;

        // Setting Form
        LapNonBebas.cmbBulThnAwal.removeAllItems();
        LapNonBebas.cmbBulThnAkhir.removeAllItems();


        for(int i = awal;i <= akhir; i++) {
            LapNonBebas.cmbBulThnAwal.addItem(i);
            LapNonBebas.cmbBulThnAkhir.addItem(i);
        }

        LapNonBebas.cmbBulBlnAwal.setSelectedIndex(bln);
        LapNonBebas.cmbBulBlnAkhir.setSelectedIndex(bln);
        LapNonBebas.cmbBulThnAwal.setSelectedItem(akhir);
        LapNonBebas.cmbBulThnAkhir.setSelectedItem(akhir);
        // Akhir Setting Form

        // Setting Form
        LapNonBebas.cmbThn.removeAllItems();

        for(int i = awal;i <= akhir; i++) {
            LapNonBebas.cmbThn.addItem(i);
        }

        LapNonBebas.cmbThn.setSelectedItem(akhir);
        // Akhir Setting Form

        setContentPane(desk);
        LapNonBebas.show();
        LapNonBebas.toFront();
        try {
            LapNonBebas.setSelected(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnLDataActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JDesktopPane desk;
    public static javax.swing.JMenuBar jMenuBar1;
    public static javax.swing.JSeparator jSeparator1;
    public static javax.swing.JSeparator jSeparator2;
    public static javax.swing.JSeparator jSeparator3;
    public static javax.swing.JSeparator jSeparator4;
    public static javax.swing.JSeparator jSeparator5;
    public static javax.swing.JSeparator jSeparator6;
    protected static javax.swing.JMenuItem mnAbout;
    public static javax.swing.JMenu mnBantuan;
    public static javax.swing.JMenu mnFile;
    protected static javax.swing.JMenuItem mnFileExit;
    protected static javax.swing.JMenuItem mnFileLogout;
    protected static javax.swing.JMenuItem mnFileObat;
    protected static javax.swing.JMenuItem mnFileSup;
    protected static javax.swing.JMenuItem mnFileUser;
    public static javax.swing.JMenuItem mnLData;
    protected static javax.swing.JMenuItem mnLapJual;
    protected static javax.swing.JMenuItem mnLapObat;
    protected static javax.swing.JMenuItem mnLapRetur;
    protected static javax.swing.JMenuItem mnLapSup;
    public static javax.swing.JMenu mnLaporan;
    protected static javax.swing.JMenuItem mnTBack;
    protected static javax.swing.JMenuItem mnTReset;
    protected static javax.swing.JMenuItem mnTRest;
    public static javax.swing.JMenu mnTools;
    protected static javax.swing.JMenuItem mnTranJual;
    protected static javax.swing.JMenuItem mnTranRetur;
    public static javax.swing.JMenu mnTransaksi;
    // End of variables declaration//GEN-END:variables

    void update()
    {
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            stmt.executeUpdate("UPDATE user SET aktif=0 WHERE idUser = '"+ user +"'");
        }
        catch(SQLException e)
        {}
    }

    protected static void menu(boolean ft)
    {
        try {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT status FROM user WHERE aktif=1");
            rs.next();
            int s = rs.getInt(1);
            if (s == 1) {
                mnFileObat.setEnabled(ft);
                mnFileSup.setEnabled(ft);
                mnTBack.setEnabled(ft);
                mnTReset.setEnabled(ft);
                mnTRest.setEnabled(ft);
            }
            mnFileUser.setEnabled(ft);
            mnFileLogout.setEnabled(ft);
            mnFileExit.setEnabled(ft);
            mnLapObat.setEnabled(ft);
            mnLapSup.setEnabled(ft);
            mnLapJual.setEnabled(ft);
            mnLapRetur.setEnabled(ft);
            mnLData.setEnabled(ft);
            mnTranJual.setEnabled(ft);
            mnTranRetur.setEnabled(ft);
            mnAbout.setEnabled(ft);
        } catch (SQLException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
