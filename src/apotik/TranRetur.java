/*
 * TranRetur.java
 *
 * Created on 25 Mei 09, 9:47:17
 */

package apotik;

import java.awt.Cursor;
import java.awt.event.*;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.*;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ryan
 */
public class TranRetur extends javax.swing.JInternalFrame {
    Object row[] = {"No","Kode","Nama Obat","Harga","Banyak","Total"};
    DefaultTableModel tblModel = new DefaultTableModel(null,row);
    SimpleDateFormat sdf;
    /** Creates new form TranRetur */
    public TranRetur() {
        initComponents();
        tblRetur.setModel(tblModel);
        txtKdNota.setEnabled(false);
        aktif(false);
        txtHapus.setEnabled(false);
        btnCetak.setEnabled(false);
        btnInput.setEnabled(false);
        btnBuat.requestFocus();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKdRetur = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTglRetur = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtTglNota = new javax.swing.JTextField();
        txtKdNota = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBeli = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnInput = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbKode = new javax.swing.JComboBox();
        cmbNama = new javax.swing.JComboBox();
        txtRetur = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRetur = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtGrand = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtHapus = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        btnTutup = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnBuat = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();

        setTitle("Transaksi Retur Penjualan");
        setPreferredSize(new java.awt.Dimension(680, 600));

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText("Kode Retur");
        jLabel1.setName("jLabel1"); // NOI18N

        txtKdRetur.setEnabled(false);
        txtKdRetur.setName("txtKdRetur"); // NOI18N

        jLabel18.setText("Tanggal Retur");
        jLabel18.setName("jLabel18"); // NOI18N

        txtTglRetur.setEnabled(false);
        txtTglRetur.setName("txtTglRetur"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKdRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 226, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTglRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKdRetur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTglRetur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel2.setText("Kode Nota");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel19.setText("Tanggal Nota");
        jLabel19.setName("jLabel19"); // NOI18N

        txtTglNota.setEnabled(false);
        txtTglNota.setName("txtTglNota"); // NOI18N

        txtKdNota.setName("txtKdNota"); // NOI18N
        txtKdNota.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKdNotaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKdNota, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTglNota, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKdNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(txtTglNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel6.setText("Kode Obat");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Nama Obat");
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText("Harga");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText("Total");
        jLabel9.setName("jLabel9"); // NOI18N

        txtHarga.setText("0");
        txtHarga.setEnabled(false);
        txtHarga.setName("txtHarga"); // NOI18N

        jLabel10.setText("Rp.");
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText("Jumlah Beli");
        jLabel11.setName("jLabel11"); // NOI18N

        txtBeli.setDocument(new atribut().angka());
        txtBeli.setText("0");
        txtBeli.setEnabled(false);
        txtBeli.setName("txtBeli"); // NOI18N

        txtTotal.setText("0");
        txtTotal.setEnabled(false);
        txtTotal.setName("txtTotal"); // NOI18N

        btnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/data.gif"))); // NOI18N
        btnInput.setText("Input Data");
        btnInput.setName("btnInput"); // NOI18N
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });
        btnInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnInputKeyPressed(evt);
            }
        });

        jLabel20.setText("Rp.");
        jLabel20.setName("jLabel20"); // NOI18N

        jLabel12.setText("Jumlah Retur");
        jLabel12.setName("jLabel12"); // NOI18N

        cmbKode.setName("cmbKode"); // NOI18N
        cmbKode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbKodeActionPerformed(evt);
            }
        });

        cmbNama.setName("cmbNama"); // NOI18N
        cmbNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNamaActionPerformed(evt);
            }
        });

        txtBeli.setDocument(new atribut().angka());
        txtRetur.setText("0");
        txtRetur.setName("txtRetur"); // NOI18N
        txtRetur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtReturKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(15, 15, 15)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(cmbKode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel8))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(txtBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRetur, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(btnInput))))
                    .addComponent(cmbNama, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(cmbKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel10)
                            .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cmbNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(txtRetur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel20)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInput))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblRetur.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblRetur.setEnabled(false);
        tblRetur.setName("tblRetur"); // NOI18N
        jScrollPane1.setViewportView(tblRetur);

        jLabel15.setText("Grand Total");
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel13.setText("Rp.");
        jLabel13.setName("jLabel13"); // NOI18N

        txtGrand.setText("0");
        txtGrand.setEnabled(false);
        txtGrand.setName("txtGrand"); // NOI18N

        jLabel21.setText("Hapus Data");
        jLabel21.setName("jLabel21"); // NOI18N

        txtHapus.setDocument(new atribut().angka());
        txtHapus.setName("txtHapus"); // NOI18N
        txtHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHapusKeyPressed(evt);
            }
        });

        jLabel5.setText("Kasir :");
        jLabel5.setName("jLabel5"); // NOI18N

        lblUser.setText("user");
        lblUser.setName("lblUser"); // NOI18N

        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.gif"))); // NOI18N
        btnTutup.setText("Tutup");
        btnTutup.setName("btnTutup"); // NOI18N
        btnTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupActionPerformed(evt);
            }
        });
        btnTutup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTutupKeyPressed(evt);
            }
        });

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        btnCetak.setText("Cetak");
        btnCetak.setName("btnCetak"); // NOI18N
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        btnCetak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCetakKeyPressed(evt);
            }
        });

        btnBuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.gif"))); // NOI18N
        btnBuat.setText("Buat");
        btnBuat.setName("btnBuat"); // NOI18N
        btnBuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatActionPerformed(evt);
            }
        });
        btnBuat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnBuatKeyPressed(evt);
            }
        });

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-T-Retur.jpg"))); // NOI18N
        jLabel22.setName("jLabel22"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 647, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(lblUser))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel21)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 285, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnBuat, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel13)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(txtGrand, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(btnCetak)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnTutup)))
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuat)
                            .addComponent(btnTutup)
                            .addComponent(btnCetak)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(lblUser))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtKdNotaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKdNotaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String z = "SELECT notaJual FROM retur WHERE notaJual LIKE '"+txtKdNota.getText()+"'";
            try
            {
                Connection cn = new sqlConfig().db();
                Statement stat = cn.createStatement();
                ResultSet result = stat.executeQuery(z);
                if(result.next())JOptionPane.showMessageDialog(this, "Retur Tidak Bisa Untuk Yang Kedua Kalinya",getTitle(),JOptionPane.WARNING_MESSAGE);
                else
                {
                    String sql = "SELECT tglJual FROM penjualan WHERE notaJual LIKE '"+txtKdNota.getText()+"'";
                    try
                    {
                        Connection con = new sqlConfig().db();
                        Statement stmt = con.createStatement();
                        ResultSet rs = stmt.executeQuery(sql);
                        rs.next();
                        String wkt = rs.getString("tglJual");
                        String tgl = wkt.substring(8);
                        String bln = wkt.substring(5,7);
                        String thn = wkt.substring(0,4);

                        Calendar dt = Calendar.getInstance();
                        String t = Integer.toString(dt.get(Calendar.DATE));if(t.length()==1)t="0"+t;
                        String b = Integer.toString(dt.get(Calendar.MONTH)+1);if(b.length()==1)b="0"+b;
                        String n = Integer.toString(dt.get(Calendar.YEAR)).substring(2);

                        if(txtKdNota.getText().substring(0, 6).compareTo(n+b+t)==0)
                        {
                            txtTglNota.setText(tgl+"/"+bln+"/"+thn);
                            String sq = "SELECT kdobat FROM penjualan_detail WHERE notaJual LIKE '"+txtKdNota.getText()+"' AND kdobat LIKE 'BE%' ORDER BY kdobat ASC";
                            try
                            {
                                Connection co = new sqlConfig().db();
                                Statement stm = co.createStatement();
                                ResultSet set = stm.executeQuery(sq);
                                cmbKode.removeAllItems();
                                cmbNama.removeAllItems();
                                if(set.next())
                                {
                                set.previous();
                                while(set.next())
                                {
                                    String s = "SELECT nmobat FROM obat WHERE kdobat LIKE '"+set.getString("kdobat")+"'";
                                    try
                                    {
                                        Connection c = new sqlConfig().db();
                                        Statement st = c.createStatement();
                                        ResultSet r = st.executeQuery(s);
                                        r.next();
                                        cmbNama.addItem(r.getString("nmobat"));
                                    }
                                    catch(SQLException sqle)
                                    {}
                                    cmbKode.addItem(set.getString("kdobat"));
                                }
                              }
                              txtKdNota.setEnabled(false);
                              aktif(true);
                              txtHapus.setEnabled(true);
                            }
                            catch(SQLException ex)
                            {}
                        }
                        else
                        {
                            JOptionPane.showMessageDialog(this, "Retur Tidak Diizinkan.\nWaktu Retur Sudah Terlewati.",getTitle(),JOptionPane.WARNING_MESSAGE);
                        }
                }
                catch(SQLException e)
                {
                    JOptionPane.showMessageDialog(this, "Data Transaksi Tidak Ada.",getTitle(),JOptionPane.WARNING_MESSAGE);
                }

                }
            }
            catch(SQLException exc)
            {}
        }
    }//GEN-LAST:event_txtKdNotaKeyPressed

    private void cmbKodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbKodeActionPerformed
        // TODO add your handling code here:
        if(cmbKode.getItemCount()>0)
        {
        String sql = "SELECT * FROM penjualan_detail WHERE kdobat LIKE '"+cmbKode.getSelectedItem().toString()+"' AND notaJual LIKE '"+txtKdNota.getText()+"'";
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            cmbNama.setSelectedIndex(cmbKode.getSelectedIndex());
            txtHarga.setText(rs.getString("hrgJualTran"));
            txtBeli.setText(rs.getString("Beli"));
        }
        catch(SQLException e)
        {}
        }
    }//GEN-LAST:event_cmbKodeActionPerformed

    private void cmbNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNamaActionPerformed
        // TODO add your handling code here:
        if(cmbNama.getItemCount()>0)
        {
        String sq = "SELECT kdobat FROM obat WHERE nmobat LIKE '"+cmbNama.getSelectedItem()+"'";
        String kod = "";
        try
        {
            Connection c = new sqlConfig().db();
            Statement st = c.createStatement();
            ResultSet r = st.executeQuery(sq);
            String kode ="";
            while(r.next())
            {
                kode = r.getString("kdobat");
                try
                {
                    String query = "SELECT kdobat FROM penjualan_detail WHERE kdobat LIKE '"+kode+"' AND notaJual LIKE '"+txtKdNota.getText()+"'";
                    Connection conn = new sqlConfig().db();
                    Statement stm = conn.createStatement();
                    ResultSet rset = stm.executeQuery(query);
                    rset.next();
                    kod = rset.getString("kdobat");
                }
                catch(SQLException ex){}
            }
       }
       catch(SQLException sqle){}

       String sql = "SELECT * FROM penjualan_detail WHERE kdobat LIKE '"+kod+"' AND notaJual LIKE '"+txtKdNota.getText()+"'";
       try
       {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            txtHarga.setText(rs.getString("hrgJualTran"));
            txtBeli.setText(rs.getString("Beli"));
       }
       catch(SQLException e)
       {}
       cmbKode.setSelectedItem(kod);
       }
    }//GEN-LAST:event_cmbNamaActionPerformed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        // TODO add your handling code here:
        isidata();
        bersih();
        total();
    }//GEN-LAST:event_btnInputActionPerformed

    private void txtReturKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtReturKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            int hrg = Integer.parseInt(txtHarga.getText());
            int byk = Integer.parseInt(txtRetur.getText());
            if(byk > Integer.parseInt(txtBeli.getText()))
            {
                JOptionPane.showMessageDialog(this, "Jumlah Retur Maksimal "+ txtBeli.getText(),getTitle(),JOptionPane.WARNING_MESSAGE);
                txtRetur.requestFocus();
                txtRetur.selectAll();
            }
            else
            {
                txtTotal.setText(Integer.toString(hrg * byk));
                btnInput.setEnabled(true);
                btnInput.requestFocus();
            }
        }
    }//GEN-LAST:event_txtReturKeyPressed

    private void btnInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnInputKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) 
        {
            isidata();
            bersih();
            total();
        }
    }//GEN-LAST:event_btnInputKeyPressed

    private void txtHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHapusKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            int hps = Integer.parseInt(txtHapus.getText());
            int baris = tblModel.getRowCount();
            if (baris < hps || hps <= 0)
            {
                JOptionPane.showMessageDialog(this, "Baris data tidak ada",getTitle(),JOptionPane.WARNING_MESSAGE);
                txtHapus.selectAll();
            }
            else
            {
                tblModel.removeRow(hps-1);
                baris = tblModel.getRowCount();
                for(int i=1;i<=baris;i++)
                {
                    tblModel.setValueAt(i, i-1, 0);
                }
                txtHapus.setText("");
            }
            total();
        }
    }//GEN-LAST:event_txtHapusKeyPressed

    private void btnBuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatActionPerformed
        // TODO add your handling code here:
        baru();
    }//GEN-LAST:event_btnBuatActionPerformed

    private void btnBuatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnBuatKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) baru();
    }//GEN-LAST:event_btnBuatKeyPressed

    private void btnTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupActionPerformed
        // TODO add your handling code here:
        tutup();
        this.dispose();
    }//GEN-LAST:event_btnTutupActionPerformed

    private void btnTutupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTutupKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            tutup();
            this.dispose();
        }
    }//GEN-LAST:event_btnTutupKeyPressed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        cetak();
    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnCetakKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCetakKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) cetak();
    }//GEN-LAST:event_btnCetakKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuat;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnTutup;
    private javax.swing.JComboBox cmbKode;
    private javax.swing.JComboBox cmbNama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JLabel lblUser;
    private javax.swing.JTable tblRetur;
    private javax.swing.JTextField txtBeli;
    private javax.swing.JTextField txtGrand;
    private javax.swing.JTextField txtHapus;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtKdNota;
    private javax.swing.JTextField txtKdRetur;
    private javax.swing.JTextField txtRetur;
    private javax.swing.JTextField txtTglNota;
    private javax.swing.JTextField txtTglRetur;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    void bersih()
    {
        txtHarga.setText("0");
        txtBeli.setText("0");
        txtRetur.setText("0");
        txtTotal.setText("0");
        txtHapus.setText("");
    }

    void aktif(boolean ft)
    {
        cmbKode.setEnabled(ft);
        cmbNama.setEnabled(ft);
        txtRetur.setEnabled(ft);
    }

    private String tgl(){
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        return sdf.format(new Date());
    }

    void isidata()
    {
        if(txtRetur.getText().compareTo("0") == 0 || txtRetur.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Jumlah Retur Tidak Boleh Kosong",getTitle(),JOptionPane.WARNING_MESSAGE);
            txtTotal.setText("0");
            txtRetur.requestFocus();
            txtRetur.selectAll();
        }
        else
        {
        int no = tblModel.getRowCount() + 1;
        String kode = cmbKode.getSelectedItem().toString();
        Object nama = cmbNama.getSelectedItem();
        String harga = txtHarga.getText();
        String byk = txtRetur.getText();
        String total = txtTotal.getText();
        int brs = tblModel.getRowCount();
        if(brs > 0)
        {
            String kd[] = new String[brs];
            for(int i = 0; i < brs;i++)
            {
                kd[i] = tblModel.getValueAt(i, 1).toString();
            }
        
            for(int i = 0;i < kd.length;i++)
            {
                if(kd[i].compareTo(kode)==0)
                {
                    JOptionPane.showMessageDialog(this, "Perhatikan Tabel!\nData Obat Sudah Ada\nPada Baris Ke-" + (i+1),getTitle(),JOptionPane.WARNING_MESSAGE);
                    break;
                }
                else if(kd.length == (i+1))
                {
                    Object data[] = {no,kode,nama,harga,byk,total};
                    tblModel.addRow(data);
                    btnInput.setEnabled(false);
                    cmbKode.requestFocus();
                }
            }
        }
        else
        {
            Object data[] = {no,kode,nama,harga,byk,total};
            tblModel.addRow(data);
            btnInput.setEnabled(false);
            cmbKode.requestFocus();
        }
        }
    }

    void total()
    {
        int jumlah = 0;
        for(int i = 0; i < tblModel.getRowCount();i++)
        {
            int hrg = Integer.parseInt(tblModel.getValueAt(i, 5).toString());
            jumlah = jumlah + hrg;
        }
        txtGrand.setText(Integer.toString(jumlah));
    }

    void baru()
    {
        if(btnBuat.getText().compareTo("Buat")==0)
        {
            txtTglRetur.setText(tgl());
            String z = "";
            String bln = tgl().substring(3,5);
            String thn = tgl().substring(8,10);
            String sql = "SELECT MAX(notaRetur) FROM retur WHERE notaRetur LIKE 'R"+ thn + bln +"%'";
            try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    z = Integer.toString(Integer.parseInt(rs.getString(1).substring(6)) + 1);
                }
                if(z.length()==1) {z = "0" + z;}
            }
            catch(Exception e)
            {
                z = "01";
            }
            txtKdRetur.setText("R"+thn+bln+z);
            btnBuat.setText("Batal");
            btnCetak.setEnabled(true);
            btnTutup.setEnabled(false);
            txtKdNota.setEnabled(true);
            txtKdNota.requestFocus();
            txtKdNota.selectAll();
        }
        else if(btnBuat.getText().compareTo("Buat")!=0)
        {
            int baris = tblModel.getRowCount();
            for(int i = 0;i<baris;i++)
            {
                tblModel.removeRow(0);
            }
            bersih();
            txtKdRetur.setText("");
            txtTglRetur.setText("");
            txtKdNota.setText("");
            txtTglNota.setText("");
            cmbKode.removeAllItems();
            cmbNama.removeAllItems();
            txtGrand.setText("0");
            txtHapus.setText("");
            btnBuat.setText("Buat");
            aktif(false);
            cmbKode.setEnabled(false);
            cmbNama.setEnabled(false);
            btnCetak.setEnabled(false);
            btnTutup.setEnabled(true);
            txtKdNota.setEnabled(false);
        }
    }

    void tutup()
    {
        int baris = tblModel.getRowCount();
        for(int i = 0;i<baris;i++)
        {
            tblModel.removeRow(0);
        }
        bersih();
        txtKdRetur.setText("");
        txtTglRetur.setText("");
        txtKdNota.setText("");
        txtTglNota.setText("");
        cmbKode.removeAllItems();
        cmbNama.removeAllItems();
        txtGrand.setText("0");
        txtHapus.setText("");
        btnBuat.setText("Buat");
        aktif(false);
        cmbKode.setEnabled(false);
        cmbNama.setEnabled(false);
        btnCetak.setEnabled(false);
        btnTutup.setEnabled(true);
        txtKdNota.setEnabled(false);
        MainMenu.menu(true);
    }

    void cetak()
    {
        String cetak[] = {"Cetak Layar","Cetak Kertas"};
        if(tblModel.getRowCount() <= 0)
        {
            JOptionPane.showMessageDialog(this, "Proses Ditolak.",getTitle(),JOptionPane.WARNING_MESSAGE);
        }
        else
        {
            int z = JOptionPane.showOptionDialog(this, "Silahkan Pilih Mode Cetakan", getTitle(), 0, JOptionPane.QUESTION_MESSAGE, null, cetak, cetak[0]);
            if(z == 0 || z == 1)
            {
                this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                Properties systemProp = System.getProperties();
                String currentDir = systemProp.getProperty("user.dir");
                HashMap parameter = new HashMap();
                parameter.put("noNota", txtKdNota.getText());
                parameter.put("tglNota", txtTglNota.getText());
                parameter.put("noRetur", txtKdRetur.getText());
                parameter.put("tglRetur", txtTglRetur.getText());
                parameter.put("total", txtGrand.getText());
                parameter.put("kasir", lblUser.getText());
                parameter.put("gambar",currentDir + "/report/logo.jpg");
                if(z==0)
                {
                    try {
                    JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/retur.jasper", parameter, new JRTableModelDataSource(tblModel));
                    JasperViewer.viewReport(jasperPrint, false);
                    } catch (JRException ex) {
                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                else
                {
                    try {
                    JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/retur.jasper", parameter, new JRTableModelDataSource(tblModel));
                    JasperPrintManager.printReport(jasperPrint, true);
                    } catch (JRException ex) {
                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            this.setCursor(Cursor.getDefaultCursor());

            //Fill Databasenya
            String tanggal = tgl();
            String thn = tanggal.substring(6,10);
            String bln = tanggal.substring(3,5);
            String tgl = tanggal.substring(0,2);
            tanggal = thn +"-"+bln+"-"+tgl;
            String sql = "INSERT INTO retur VALUES('"+txtKdRetur.getText()+"','"+tanggal+"',"+txtGrand.getText()+",'"+Login.user+"','"+txtKdNota.getText()+"')";
            try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                stmt.executeUpdate(sql);
            }
            catch(SQLException e){}

            try
            {
                int baris = tblModel.getRowCount();
                for(int i=0; i<baris; i++)
                {
                    String nt = txtKdRetur.getText();
                    String kd = tblModel.getValueAt(i, 1).toString();
                    String hrg = tblModel.getValueAt(i, 3).toString();
                    String bl = tblModel.getValueAt(i, 4).toString();
                    String ttl = tblModel.getValueAt(i, 5).toString();
                    String data = "INSERT INTO retur_detail VALUES('"+nt+"','"+kd+"',"+bl+","+ttl+")";
                    String jadi = "UPDATE obat SET stok = stok + "+bl+" WHERE kdobat = '"+kd+"'";
                    Connection cn = new sqlConfig().db();
                    Statement stm = cn.createStatement();
                    stm.executeUpdate(data);
                    stm.close();
                    cn.close();
                    cn = new sqlConfig().db();
                    stm = cn.createStatement();
                    stm.executeUpdate(jadi);
                    stm.close();
                    cn.close();
                }
            }
            catch(SQLException e)
            {}
            bersih();
            tutup();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Proses Cetak Dibatalkan.",getTitle(),JOptionPane.WARNING_MESSAGE);
            }
        }
    }
}
