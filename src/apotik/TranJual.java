/*
 * TranJual.java
 *
 * Created on 03 Jun 09, 21:19:38
 */

package apotik;

import java.awt.Cursor;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.*;
import java.util.*;
import java.util.Date;
import java.util.logging.*;
import javax.swing.*;
import javax.swing.table.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Ryan
 */
public class TranJual extends javax.swing.JInternalFrame {
    static TranCopy TranCopy = new TranCopy(new JFrame(), true);
    static DataObat DataObat = new DataObat(new JFrame(), true);
    static String sq="";
    SimpleDateFormat sdf;
    int akhir,z;
    String row[] = {"No","Kode","Nama","Harga","Beli","Total"};
    String rw[] = {"No","Nama","Satuan","Ukuran","Beli"};
    DefaultTableModel tabModel =  new DefaultTableModel(null,row);
    DefaultTableModel hide = new DefaultTableModel(null,rw);
    /** Creates new form TranJual */
    public TranJual() {
        initComponents();
        tblJual.setModel(tabModel);
        tblHide.setModel(hide);
        bersih();
        txtKode.setText("");
        txtTgl.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtTelepon.setText("");
        txtGrand.setText("0");
        txtBayar.setText("0");
        txtKembali.setText("0");
        txtHapus.setText("");
        aktif(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        tblHide = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTelepon = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTgl = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtOKode = new javax.swing.JTextField();
        txtONama = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtBeli = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnInput = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblJual = new javax.swing.JTable();
        txtBayar = new javax.swing.JTextField();
        txtKembali = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtHapus = new javax.swing.JTextField();
        btnBuat = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtGrand = new javax.swing.JTextField();

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        tblHide.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHide.setName("tblHide"); // NOI18N
        jScrollPane3.setViewportView(tblHide);

        setTitle("Transaksi Penjualan");
        setPreferredSize(new java.awt.Dimension(730, 600));

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel2.setText("Nama");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText("Alamat");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("Telepon");
        jLabel4.setName("jLabel4"); // NOI18N

        txtTelepon.setDocument(new atribut().angka());
        txtTelepon.setName("txtTelepon"); // NOI18N
        txtTelepon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTeleponKeyPressed(evt);
            }
        });

        txtNama.setDocument(new atribut().atas());
        txtNama.setDocument(new atribut().huruf());
        txtNama.setName("txtNama"); // NOI18N
        txtNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaKeyPressed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtAlamat.setLineWrap(true);
        txtAlamat.setWrapStyleWord(true);
        txtAlamat.setName("txtAlamat"); // NOI18N
        txtAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAlamatKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtAlamat);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1)
                    .addComponent(txtNama, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelepon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel1.setText("Kode Nota");
        jLabel1.setName("jLabel1"); // NOI18N

        txtKode.setEnabled(false);
        txtKode.setName("txtKode"); // NOI18N

        jLabel18.setText("Tanggal Nota");
        jLabel18.setName("jLabel18"); // NOI18N

        txtTgl.setEnabled(false);
        txtTgl.setName("txtTgl"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 246, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTgl, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setName("jPanel4"); // NOI18N

        jLabel6.setText("Kode Obat");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Nama Obat");
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel8.setText("Harga");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText("Total");
        jLabel9.setName("jLabel9"); // NOI18N

        txtOKode.setName("txtOKode"); // NOI18N
        txtOKode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOKodeKeyPressed(evt);
            }
        });

        txtONama.setName("txtONama"); // NOI18N
        txtONama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtONamaKeyPressed(evt);
            }
        });

        txtHarga.setEnabled(false);
        txtHarga.setName("txtHarga"); // NOI18N

        jLabel10.setText("Rp.");
        jLabel10.setName("jLabel10"); // NOI18N

        jLabel11.setText("Jumlah Beli");
        jLabel11.setName("jLabel11"); // NOI18N

        txtBeli.setDocument(new atribut().angka());
        txtBeli.setText("0");
        txtBeli.setName("txtBeli"); // NOI18N
        txtBeli.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBeliKeyPressed(evt);
            }
        });

        txtTotal.setEnabled(false);
        txtTotal.setName("txtTotal"); // NOI18N

        btnInput.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/data.gif"))); // NOI18N
        btnInput.setText("Input Data");
        btnInput.setName("btnInput"); // NOI18N
        btnInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInputActionPerformed(evt);
            }
        });
        btnInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnInputKeyPressed(evt);
            }
        });

        jLabel20.setText("Rp.");
        jLabel20.setName("jLabel20"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9))
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtOKode, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtONama, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHarga, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBeli, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4))
                            .addComponent(btnInput, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtOKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtONama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(txtBeli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(btnInput))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        tblJual.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblJual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblJual.setEnabled(false);
        tblJual.setName("tblJual"); // NOI18N
        tblJual.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblJual);

        txtBayar.setDocument(new atribut().angka());
        txtBayar.setName("txtBayar"); // NOI18N
        txtBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBayarActionPerformed(evt);
            }
        });
        txtBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBayarKeyPressed(evt);
            }
        });

        txtKembali.setEnabled(false);
        txtKembali.setName("txtKembali"); // NOI18N

        jLabel12.setText("Rp.");
        jLabel12.setName("jLabel12"); // NOI18N

        jLabel13.setText("Rp.");
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText("Rp.");
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText("Grand Total");
        jLabel15.setName("jLabel15"); // NOI18N

        jLabel16.setText("Uang Bayar");
        jLabel16.setName("jLabel16"); // NOI18N

        jLabel17.setText("Uang Kembali");
        jLabel17.setName("jLabel17"); // NOI18N

        jLabel19.setText("Hapus Data");
        jLabel19.setName("jLabel19"); // NOI18N

        txtHapus.setDocument(new atribut().angka());
        txtHapus.setName("txtHapus"); // NOI18N
        txtHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHapusKeyPressed(evt);
            }
        });

        btnBuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.gif"))); // NOI18N
        btnBuat.setText("Buat");
        btnBuat.setName("btnBuat"); // NOI18N
        btnBuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatActionPerformed(evt);
            }
        });

        btnCetak.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/print.gif"))); // NOI18N
        btnCetak.setText("Cetak");
        btnCetak.setName("btnCetak"); // NOI18N
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        btnCetak.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCetakKeyPressed(evt);
            }
        });

        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.gif"))); // NOI18N
        btnTutup.setText("Tutup");
        btnTutup.setName("btnTutup"); // NOI18N
        btnTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupActionPerformed(evt);
            }
        });
        btnTutup.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTutupKeyPressed(evt);
            }
        });

        jLabel5.setText("Kasir :");
        jLabel5.setName("jLabel5"); // NOI18N

        lblUser.setText("user");
        lblUser.setName("lblUser"); // NOI18N

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-T-jual.jpg"))); // NOI18N
        jLabel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel21.setName("jLabel21"); // NOI18N

        txtBayar.setDocument(new atribut().angka());
        txtGrand.setEnabled(false);
        txtGrand.setName("txtGrand"); // NOI18N
        txtGrand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGrandActionPerformed(evt);
            }
        });
        txtGrand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtGrandKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBuat)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCetak)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnTutup))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblUser)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 148, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtKembali, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                .addComponent(txtBayar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtGrand, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(64, 64, 64))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBuat, btnCetak, btnTutup});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtBayar, txtGrand, txtKembali});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuat)
                            .addComponent(btnCetak)
                            .addComponent(btnTutup)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel12)
                            .addComponent(txtGrand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(txtHapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(lblUser))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtBayar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtKembali, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jLabel17))))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBuat, btnCetak, btnTutup});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatActionPerformed
        // TODO add your handling code here:
        baru();
    }//GEN-LAST:event_btnBuatActionPerformed

    private void txtOKodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOKodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) obat(0,txtOKode.getText());
    }//GEN-LAST:event_txtOKodeKeyPressed

    private void txtONamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtONamaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) obat(1,txtONama.getText());
    }//GEN-LAST:event_txtONamaKeyPressed

    private void txtBeliKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBeliKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(txtBeli.getText().compareTo("0") == 0 || txtBeli.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(this, "Jumlah Beli Tidak Boleh Kosong",getTitle(),JOptionPane.WARNING_MESSAGE);
                txtTotal.setText("0");
                txtTotal.requestFocus();
                txtTotal.selectAll();
            }
            else
            {
                try
                {
                    String sql = "SELECT stok FROM obat WHERE kdObat LIKE '"+txtOKode.getText()+"'";
                    Connection con  = new sqlConfig().db();
                    Statement stmt =  con.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    rs.next();
                    int stok = rs.getInt(1);
                    int baru = stok - Integer.parseInt(txtBeli.getText());
                    if(baru < 0 )
                    {
                        JOptionPane.showMessageDialog(this, "Stok Obat Tidak Mencukupi.\nPembelian Maksimal "+ stok +" Obat",getTitle(),JOptionPane.WARNING_MESSAGE);
                        txtBeli.requestFocus();
                        txtBeli.selectAll();
                        akhir = 0;
                    }
                    else
                    {
                        int total = Integer.parseInt(txtHarga.getText()) * Integer.parseInt(txtBeli.getText());
                        txtTotal.setText(Integer.toString(total));
                        btnInput.setEnabled(true);
                        btnInput.requestFocus();
                        akhir = baru;
                    }
                }
                catch(SQLException e)
                {}
            }
        }
    }//GEN-LAST:event_txtBeliKeyPressed

    private void btnInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInputActionPerformed
        // TODO add your handling code here:
        input();
    }//GEN-LAST:event_btnInputActionPerformed

    private void btnInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnInputKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) input();
    }//GEN-LAST:event_btnInputKeyPressed

    private void txtHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHapusKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            int awal=0;
            int hps = Integer.parseInt(txtHapus.getText());
            int baris = tabModel.getRowCount();
            if (baris < hps || hps <= 0)
            {
                JOptionPane.showMessageDialog(this, "Baris data tidak ada",getTitle(),JOptionPane.WARNING_MESSAGE);
                txtHapus.selectAll();
            }
            else
            {
                hps = hps - 1;
                String kode = tabModel.getValueAt(hps, 1).toString().trim();
                int stok = Integer.parseInt(tabModel.getValueAt(hps, 4).toString());
                String sql = "SELECT stok FROM obat WHERE kdObat LIKE '"+kode+"'";
                try
                {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    rs.next();
                    awal = rs.getInt("stok");
                }
                catch(SQLException e)
                {}
                stok = stok + awal;
                sql = "UPDATE obat SET stok = "+ stok +" WHERE kdObat LIKE '"+kode+"'";
                try
                {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    stmt.executeUpdate(sql);
                }
                catch(SQLException e)
                {}
                tabModel.removeRow(hps);
                baris = tabModel.getRowCount();
                for(int i=1;i<=baris;i++)
                {
                    tabModel.setValueAt(i, i-1, 0);
                }
                //Tabel Hidden
                hide.removeRow(hps);
                baris = hide.getRowCount();
                for(int i=1;i<=baris;i++)
                {
                    hide.setValueAt(i, i-1, 0);
                }

                txtHapus.setText("");
            }
            total();
        }
    }//GEN-LAST:event_txtHapusKeyPressed

    private void btnTutupKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTutupKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            kosong();
            this.dispose();
        }
    }//GEN-LAST:event_btnTutupKeyPressed

    private void txtNamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtAlamat.requestFocus();
            txtAlamat.selectAll();
        }
    }//GEN-LAST:event_txtNamaKeyPressed

    private void txtAlamatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlamatKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtTelepon.requestFocus();
            txtTelepon.selectAll();
        }
    }//GEN-LAST:event_txtAlamatKeyPressed

    private void txtTeleponKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTeleponKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtOKode.requestFocus();
            txtOKode.selectAll();
        }
    }//GEN-LAST:event_txtTeleponKeyPressed

    private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
        // TODO add your handling code here:
        cetak();

    }//GEN-LAST:event_btnCetakActionPerformed

    private void btnCetakKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCetakKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) 
        {
            cetak();
        }
    }//GEN-LAST:event_btnCetakKeyPressed

    private void btnTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupActionPerformed
        // TODO add your handling code here:
        kosong();
        this.dispose();
    }//GEN-LAST:event_btnTutupActionPerformed

    private void txtBayarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBayarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyChar()==KeyEvent.VK_ENTER)
        {
            int grand = Integer.parseInt(txtGrand.getText());
            int bayar = Integer.parseInt(txtBayar.getText());
            int kembali = bayar - grand;
            if(kembali < 0)
            {
                JOptionPane.showMessageDialog(this, "Uang Bayar Kurang",getTitle(),JOptionPane.WARNING_MESSAGE);
                txtBayar.requestFocus();
                txtBayar.selectAll();
            }
            else
            {
                txtKembali.setText(Integer.toString(kembali));
                btnCetak.requestFocus();
            }
        }
    }//GEN-LAST:event_txtBayarKeyPressed

    private void txtBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBayarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBayarActionPerformed

    private void txtGrandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGrandActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_txtGrandActionPerformed

    private void txtGrandKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGrandKeyPressed
        // TODO add your handling code here:
}//GEN-LAST:event_txtGrandKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuat;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnInput;
    private javax.swing.JButton btnTutup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    protected static javax.swing.JLabel lblUser;
    private javax.swing.JTable tblHide;
    private javax.swing.JTable tblJual;
    protected static javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtBayar;
    protected static javax.swing.JTextField txtBeli;
    private javax.swing.JTextField txtGrand;
    private javax.swing.JTextField txtHapus;
    protected static javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtKembali;
    private javax.swing.JTextField txtKode;
    protected static javax.swing.JTextField txtNama;
    protected static javax.swing.JTextField txtOKode;
    protected static javax.swing.JTextField txtONama;
    protected static javax.swing.JTextField txtTelepon;
    private javax.swing.JTextField txtTgl;
    protected static javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    private String tgl(){
        sdf = new SimpleDateFormat("dd/MM/yyyy");
        return sdf.format(new Date());
    }

    void obat(int o,String dt)
    {
        String sql="";
        if (o == 0)
        {
            if(txtNama.getText().isEmpty() || txtAlamat.getText().isEmpty() || txtTelepon.getText().isEmpty())
            {
                sql = "SELECT * FROM obat WHERE (jenis LIKE 'Bebas%' OR jenis LIKE 'Jamu') AND kdObat LIKE '"+ dt +"' AND stok > 0";
                sq = "SELECT * FROM obat WHERE (jenis LIKE 'Bebas%' OR jenis LIKE 'Jamu')AND kdObat LIKE '"+ dt +"%' AND stok > 0";
            }
            else
            {
                sql = "SELECT * FROM obat WHERE  kdObat LIKE '"+ dt +"' AND stok > 0";
                sq = "SELECT * FROM obat WHERE  kdObat LIKE '"+ dt +"%' AND stok > 0";
            }
        }
        else if(o == 1)
        {
            if(txtNama.getText().isEmpty() || txtAlamat.getText().isEmpty() || txtTelepon.getText().isEmpty())
            {
                sql = "SELECT * FROM obat WHERE (jenis LIKE 'Bebas%' OR jenis LIKE 'Jamu') AND nmObat LIKE '"+ dt +"' AND stok > 0";
                sq = "SELECT * FROM obat WHERE (jenis LIKE 'Bebas%' OR jenis LIKE 'Jamu') AND nmObat LIKE '"+ dt +"%' AND stok > 0";
            }
            else
            {
                sql = "SELECT * FROM obat WHERE nmObat LIKE '"+ dt +"' AND stok > 0";
                sq = "SELECT * FROM obat WHERE nmObat LIKE '"+ dt +"%' AND stok > 0";
            }
        }
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            rs.next();
            txtOKode.setText(rs.getString(1));
            txtONama.setText(rs.getString(2));
            txtHarga.setText(Integer.toString(rs.getInt("hrgJualObat")));
            txtBeli.requestFocus();
        }
        catch(SQLException e)
        {
            gagal(sq);
        }
    }

    static void gagal(String s)
    {
        String row[] = {"No","Kode","Nama","Harga","Stok"};
        DataObat.tbl = new DefaultTableModel(null,row);
        DataObat.tblObat.setModel(DataObat.tbl);

        int a = 1;
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt  = con.createStatement();
            ResultSet rs = stmt.executeQuery(s);
            if(rs.next())
            {
                rs.previous();
                while(rs.next())
                  {
                        String kode = rs.getString("kdObat");
                        String nama = rs.getString("nmObat");
                        int harga = rs.getInt("hrgJualObat");
                        int stok = rs.getInt("stok");
                        Object data[] = {a,kode,nama,harga,stok};
                        DataObat.tbl.addRow(data);
                        a++;
                    }
                    DataObat.setLocationRelativeTo(DataObat);
                    DataObat.setVisible(true);
                    DataObat.tblObat.setColumnSelectionAllowed(false);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "Data Kosong", "Data Obat", JOptionPane.WARNING_MESSAGE);
            }
            }
            catch(SQLException ex)
            {}
    }

    void input()
    {
        if(txtBeli.getText().compareTo("0") == 0 || txtBeli.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Jumlah Beli Tidak Boleh Kosong",getTitle(),JOptionPane.WARNING_MESSAGE);
            txtTotal.setText("0");
            txtBeli.requestFocus();
            txtBeli.selectAll();
        }
        else
        {
            int baris = tabModel.getRowCount() + 1;
            String kode = txtOKode.getText();
            String nama = txtONama.getText();
            String harga = txtHarga.getText();
            String beli = txtBeli.getText();
            String total = txtTotal.getText();
            int brs = baris - 1;
            if((brs) > 0)
            {
                String kd[] = new String[brs];
                for(int i = 0; i < brs;i++)
                {
                    kd[i] = tabModel.getValueAt(i, 1).toString();
                }

                for(int i = 0;i < kd.length;i++)
                {
                    if(kd[i].compareTo(kode)==0)
                    {
                        JOptionPane.showMessageDialog(this, "Perhatikan Tabel!\nData Obat Sudah Ada\nPada Baris Ke-" + (i+1),getTitle(),JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                    else if(kd.length == (i+1))
                    {
                        Object data[] = {baris,kode,nama,harga,beli,total};
                        tabModel.addRow(data);
                        Connection con = new sqlConfig().db();
                        try {
                            Statement stmt = con.createStatement();
                            ResultSet rs = stmt.executeQuery("SELECT satuan,ukuran from obat WHERE kdObat LIKE '"+kode+"'");
                            rs.next();
                            String sat = rs.getString(1);
                            String uk = rs.getString(2);
                            Object dt[] = {baris,nama,sat,uk,beli};
                            hide.addRow(dt);
                        } catch (SQLException ex) {
                            Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
            else
            {
                Object data[] = {baris,kode,nama,harga,beli,total};
                tabModel.addRow(data);
                Connection con = new sqlConfig().db();
                try {
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery("SELECT satuan,ukuran from obat WHERE kdObat LIKE '"+kode+"'");
                    rs.next();
                    String sat = rs.getString(1);
                    String uk = rs.getString(2);
                    Object dt[] = {baris,nama,sat,uk,beli};
                    hide.addRow(dt);
                } catch (SQLException ex) {
                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            btnInput.setEnabled(false);
            bersih();
            txtOKode.requestFocus();
            try
            {
                String sql = "UPDATE obat SET stok = "+akhir+" WHERE kdObat = '"+kode+"'";
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                stmt.executeUpdate(sql);
            }
            catch(SQLException e){}
        }
        total();
    }

    void baru()
    {
        if(btnBuat.getText().compareTo("Buat")==0)
        {
            txtTgl.setText(tgl());
            String a = "";
            String tgl = tgl().substring(0,2);
            String bln = tgl().substring(3,5);
            String thn = tgl().substring(8,10);
            String sql = "SELECT MAX(notaJual) FROM penjualan WHERE notaJual LIKE '"+ thn + bln + tgl +"%'";
            try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    a = Integer.toString(Integer.parseInt(rs.getString(1).substring(6)) + 1);
                }
                if(a.length()==1) {a = "00" + a;} else if(a.length()==2) a = "0" + a;
            }
            catch(Exception e)
            {
                a = "001";
            }
            txtKode.setText(thn+bln+tgl+a);
            btnBuat.setText("Batal");
            aktif(true);
            txtNama.requestFocus();
            txtNama.selectAll();
        }
        else if(btnBuat.getText().compareTo("Buat")!=0)
        {
            int baris = tabModel.getRowCount();
            for(int i = 0;i<baris;i++)
            {
                String kode = tabModel.getValueAt(i, 1).toString().trim();
                int stok = Integer.parseInt(tabModel.getValueAt(i, 4).toString());
                int awal=0;
                String sql = "SELECT stok FROM obat WHERE kdObat LIKE '"+kode+"'";
                try
                {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    ResultSet rs = stmt.executeQuery(sql);
                    rs.next();
                    awal = rs.getInt("stok");
                }
                catch(SQLException e)
                {}
                stok = stok + awal;
                sql = "UPDATE obat SET stok = "+ stok +" WHERE kdObat LIKE '"+kode+"'";
                try
                {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    stmt.executeUpdate(sql);
                }
                catch(SQLException e)
                {}
            }
            for(int i = 0;i<baris;i++)
            {
                tabModel.removeRow(0);
            }
            for(int i = 0;i<baris;i++)
            {
                hide.removeRow(0);
            }
            bersih();
            txtKode.setText("");
            txtTgl.setText("");
            txtNama.setText("");
            txtAlamat.setText("");
            txtTelepon.setText("");
            txtGrand.setText("0");
            txtBayar.setText("0");
            txtKembali.setText("0");
            txtHapus.setText("");
            btnBuat.setText("Buat");
            aktif(false);
        }
    }

    void total()
    {
        int baris = tabModel.getRowCount();
        int grand = 0;
        for(int i=0;i<baris;i++)
        {
            grand = grand + Integer.parseInt(tabModel.getValueAt(i, 5).toString());
        }
        txtGrand.setText(Integer.toString(grand));
    }

    void kosong()
    {
        int baris = tabModel.getRowCount();
        for(int i = 0;i<baris;i++)
        {
            tabModel.removeRow(0);
        }
        for(int i = 0;i<baris;i++)
        {
            hide.removeRow(0);
        }
        bersih();
        txtKode.setText("");
        txtTgl.setText("");
        txtNama.setText("");
        txtAlamat.setText("");
        txtTelepon.setText("");
        txtGrand.setText("0");
        txtBayar.setText("0");
        txtKembali.setText("0");
        txtHapus.setText("");
        btnBuat.setText("Buat");
        aktif(false);
        MainMenu.menu(true);
    }

    void cetak()
    {
        if(Integer.parseInt(txtBayar.getText()) < Integer.parseInt(txtGrand.getText()))
        {
            JOptionPane.showMessageDialog(this, "Uang Bayar Kurang");
        }
        else
        {
        String cetak[] = {"Cetak Layar","Cetak Kertas"};
        z = JOptionPane.showOptionDialog(this, "Silahkan Pilih Mode Cetakan", getTitle(), 0, JOptionPane.QUESTION_MESSAGE, null, cetak, cetak[0]);
        if(z == 0 || z == 1)
        {
            String cpy[] = {"Ya","Tidak"};
            if(tabModel.getRowCount() <= 0 && Integer.parseInt(txtBayar.getText()) < Integer.parseInt(txtGrand.getText()))
            {
                JOptionPane.showMessageDialog(this, "Proses Ditolak.",getTitle(),JOptionPane.WARNING_MESSAGE);
            }
            else
            {
                if(txtNama.getText().isEmpty()==false)
                {
                    int a = JOptionPane.showOptionDialog(this, "Apakah Ingin Cetak Copy Resep", getTitle(), 0, JOptionPane.QUESTION_MESSAGE, null, cpy, cpy[0]);
                    if(a==0)
                    {
                        TranCopy.txtND.setText("");
                        TranCopy.txtNO.setText("");
                        int t = Integer.parseInt(tgl().substring(6,10));
                        int pre = t - 1;
                        int pos = t + 1;
                        TranCopy.cThn.removeAllItems();
                        TranCopy.cThn.addItem(pre);
                        TranCopy.cThn.addItem(t);
                        TranCopy.cThn.addItem(pos);
                        TranCopy.cTgl.setSelectedIndex(Integer.parseInt(tgl().substring(0,2)) - 1);
                        TranCopy.cBln.setSelectedIndex(Integer.parseInt(tgl().substring(3,5)) - 1);
                        TranCopy.cThn.setSelectedItem(t);
                        TranCopy.setLocationRelativeTo(this);
                        TranCopy.setVisible(true);
                        TranCopy.txtND.requestFocus();
                        if(TranCopy.isVisible()==false)
                        {
                            String T = TranCopy.cTgl.getSelectedItem().toString();if(T.length()==1)T="0"+T;
                            String B = Integer.toString(TranCopy.cBln.getSelectedIndex()+1);if(B.length()==1)B="0"+B;
                            String N = TranCopy.cThn.getSelectedItem().toString();
                            this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
                            Properties systemProp = System.getProperties();
                            String currentDir = systemProp.getProperty("user.dir");
                            HashMap parameter = new HashMap();
                            parameter.put("nama", TranCopy.txtND.getText());
                            parameter.put("tglbuat", T+"/"+B+"/"+N);
                            parameter.put("no",TranCopy.txtNO.getText());
                            parameter.put("untuk", txtNama.getText());
                            parameter.put("tgl", tgl());
                            parameter.put("gambar",currentDir + "/report/logo.jpg");
                            if(z==0)
                            {
                                try {
                                    JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/copy_resep.jasper", parameter, new JRTableModelDataSource(hide));
                                    JasperViewer.viewReport(jasperPrint, false);
                                } catch (JRException ex) {
                                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            else
                            {
                                try {
                                JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/copy_resep.jasper", parameter, new JRTableModelDataSource(tabModel));
                                JasperPrintManager.printReport(jasperPrint, true);
                                } catch (JRException ex) {
                                    Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
                                }
                            }
                            this.setCursor(Cursor.getDefaultCursor());
                            nota();
                        }
                    }
                    else nota();
                }
                else nota();
            }
            TranCopy.dispose();
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Proses Cetak Dibatalkan.",getTitle(),JOptionPane.WARNING_MESSAGE);
        }
        }
    }

    void nota()
    {
      
        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Properties systemProp = System.getProperties();
        String currentDir = systemProp.getProperty("user.dir");
        HashMap parameter = new HashMap();
        parameter.put("noNota", txtKode.getText());
        parameter.put("tglNota", txtTgl.getText());
        parameter.put("nama", txtNama.getText());
        parameter.put("alamat", txtAlamat.getText());
        parameter.put("telp", txtTelepon.getText());
        parameter.put("total", txtGrand.getText());
        parameter.put("kasir", lblUser.getText());
        parameter.put("gambar",currentDir + "/report/logo.jpg");
        if(z==0)
        {
            try {
            JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/nota_jual.jasper", parameter, new JRTableModelDataSource(tabModel));
            JasperViewer.viewReport(jasperPrint, false);
            } catch (JRException ex) {
            Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        else
        {
            try {
            JasperPrint jasperPrint = JasperFillManager.fillReport(currentDir + "/report/nota_jual.jasper", parameter, new JRTableModelDataSource(tabModel));
            JasperPrintManager.printReport(jasperPrint, true);
            } catch (JRException ex) {
                Logger.getLogger(TranJual.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        this.setCursor(Cursor.getDefaultCursor());

        //Fill Databasenya
        String tanggal = tgl();
        String thn = tanggal.substring(6,10);
        String bln = tanggal.substring(3,5);
        String tgl = tanggal.substring(0,2);
        tanggal = thn +"-"+bln+"-"+tgl;
        String sql = "INSERT INTO penjualan VALUES('"+txtKode.getText()+"','"+tanggal+"','"+txtNama.getText()+"','"+txtAlamat.getText()+
                "','"+txtTelepon.getText()+"',"+txtGrand.getText()+",'"+Login.user+"')";
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            stmt.executeUpdate(sql);
        }
        catch(SQLException e){}

        try
        {
            int baris = tabModel.getRowCount();
            for(int i=0; i<baris; i++)
            {
                String nt = txtKode.getText();
                String kd = tabModel.getValueAt(i, 1).toString();
                String hrg = tabModel.getValueAt(i, 3).toString();
                String bl = tabModel.getValueAt(i, 4).toString();
                String ttl = tabModel.getValueAt(i, 5).toString();
                String data = "INSERT INTO penjualan_detail VALUES('"+nt+"','"+kd+"',"+hrg+","+bl+","+ttl+")";
                Connection cn = new sqlConfig().db();
                Statement stm = cn.createStatement();
                stm.executeUpdate(data);
                stm.close();
                cn.close();
            }
        }
        catch(SQLException e)
        {}
        kosong();
    }

    void bersih()
    {
        txtOKode.setText("");
        txtONama.setText("");
        txtHarga.setText("0");
        txtBeli.setText("0");
        txtTotal.setText("0");
        btnInput.setEnabled(false);
    }

    void aktif(boolean ft)
    {
        txtNama.setEnabled(ft);
        txtAlamat.setEnabled(ft);
        txtTelepon.setEnabled(ft);
        txtONama.setEnabled(ft);
        txtOKode.setEnabled(ft);
        txtBeli.setEnabled(ft);
        txtHapus.setEnabled(ft);
        txtBayar.setEnabled(ft);
        btnCetak.setEnabled(ft);
        btnTutup.setEnabled(!ft);
    }
}
