package apotik;

import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.sql.*;
import javax.swing.table.*;

/**
 *
 * @author Ryan
 */
public class FileObat extends javax.swing.JInternalFrame {
    boolean data;
    DefaultTableModel tabMode,tblModel;
    String k1,k2,k3,k4;
    int n = 0;
    Object row[] = {"No","Kode","Nama","Jenis","Satuan","Ukuran","H. Beli","Net","H. Jual","Stok","Produksi"};
    /** Creates new form FileObat */
    public FileObat() {
        initComponents();
        kode();
        tampilTabel();
        atur(false);
        if(tabMode.getRowCount() > 0)
        {
            tampilTeks(0);
            cari(true);
        } else {
            btnHapus.setEnabled(false);
            btnEdit.setEnabled(false);
            cari(false);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblObat = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        cmbJenis = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        cmbSatuan = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtUkur = new javax.swing.JTextField();
        cmbUkur = new javax.swing.JComboBox();
        btnTambah = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSimpan = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtStok = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cmbProd = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        cmbNet = new javax.swing.JComboBox();
        txtJual = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtKode = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        btnCari = new javax.swing.JButton();
        btnSemua = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblUser = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();

        setTitle("File Data Obat");
        setMaximumSize(new java.awt.Dimension(810, 542));

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblObat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblObat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblObat.setAutoscrolls(false);
        tblObat.setEnabled(false);
        tblObat.setName("tblObat"); // NOI18N
        jScrollPane1.setViewportView(tblObat);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setName("jPanel1"); // NOI18N

        cmbJenis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Bebas", "Keras", "Jamu", "Narkotika", "Psikotropika" }));
        cmbJenis.setName("cmbJenis"); // NOI18N
        cmbJenis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbJenisKeyPressed(evt);
            }
        });

        jLabel3.setText("Jenis Obat");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("Nama Obat");
        jLabel4.setName("jLabel4"); // NOI18N

        txtNama.setName("txtNama"); // NOI18N
        txtNama.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaKeyPressed(evt);
            }
        });

        cmbSatuan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Tablet", "Kapsul", "Kaplet", "Sirop", "Bedak", "Lotion", "Cream", "Balsem", "Jelly", "Injeksi", "Tetes", "Semprot", "Serbuk", "Inhaler" }));
        cmbSatuan.setName("cmbSatuan"); // NOI18N
        cmbSatuan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbSatuanKeyPressed(evt);
            }
        });

        jLabel5.setText("Satuan");
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel9.setText("Ukuran");
        jLabel9.setName("jLabel9"); // NOI18N

        txtHarga.setDocument(new atribut().angka());
        txtUkur.setName("txtUkur"); // NOI18N
        txtUkur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUkurKeyPressed(evt);
            }
        });

        cmbUkur.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "gr", "ml", "ui", "ds", "mg", "Ampul" }));
        cmbUkur.setName("cmbUkur"); // NOI18N
        cmbUkur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbUkurKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtUkur, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbUkur, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtUkur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbUkur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        btnTambah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.gif"))); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.setName("btnTambah"); // NOI18N
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });
        btnTambah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnTambahKeyPressed(evt);
            }
        });

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/edit.gif"))); // NOI18N
        btnEdit.setText("Edit");
        btnEdit.setName("btnEdit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        btnEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnEditKeyPressed(evt);
            }
        });

        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.gif"))); // NOI18N
        btnSimpan.setText("Simpan");
        btnSimpan.setName("btnSimpan"); // NOI18N
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        btnSimpan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSimpanKeyPressed(evt);
            }
        });

        btnHapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/delete.gif"))); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.setName("btnHapus"); // NOI18N
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        btnHapus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnHapusKeyPressed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setName("jPanel2"); // NOI18N

        jLabel6.setText("Hrg Beli");
        jLabel6.setName("jLabel6"); // NOI18N

        txtStok.setName("txtStok"); // NOI18N
        txtStok.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtStokKeyPressed(evt);
            }
        });

        txtHarga.setDocument(new atribut().angka());
        txtHarga.setName("txtHarga"); // NOI18N
        txtHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtHargaKeyPressed(evt);
            }
        });

        jLabel7.setText("Stok");
        jLabel7.setName("jLabel7"); // NOI18N

        jLabel10.setText("Produksi");
        jLabel10.setName("jLabel10"); // NOI18N

        cmbProd.setMaximumSize(new java.awt.Dimension(300, 20));
        cmbProd.setName("cmbProd"); // NOI18N
        cmbProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbProdKeyPressed(evt);
            }
        });

        jLabel11.setText("+ Net");
        jLabel11.setName("jLabel11"); // NOI18N

        cmbNet.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "10%", "15%", "20%", "25%", "40%" }));
        cmbNet.setName("cmbNet"); // NOI18N
        cmbNet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cmbNetKeyPressed(evt);
            }
        });

        txtHarga.setDocument(new atribut().angka());
        txtJual.setEnabled(false);
        txtJual.setMaximumSize(new java.awt.Dimension(50, 20));
        txtJual.setName("txtJual"); // NOI18N

        jLabel12.setText("= Hrg Jual");
        jLabel12.setName("jLabel12"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtJual, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbProd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(cmbNet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("Kode Obat");
        jLabel1.setName("jLabel1"); // NOI18N

        txtKode.setFont(new java.awt.Font("Tahoma", 1, 12));
        txtKode.setEnabled(false);
        txtKode.setName("txtKode"); // NOI18N

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/x-f-obat.jpg"))); // NOI18N
        jLabel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel14.setName("jLabel14"); // NOI18N
        jLabel14.setPreferredSize(new java.awt.Dimension(814, 64));

        btnCari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cari.gif"))); // NOI18N
        btnCari.setText("Cari");
        btnCari.setName("btnCari"); // NOI18N
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        btnCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCariKeyPressed(evt);
            }
        });

        btnSemua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/cari.gif"))); // NOI18N
        btnSemua.setText("Semua");
        btnSemua.setName("btnSemua"); // NOI18N
        btnSemua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSemuaActionPerformed(evt);
            }
        });
        btnSemua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnSemuaKeyPressed(evt);
            }
        });

        jLabel2.setText("User :");
        jLabel2.setName("jLabel2"); // NOI18N

        lblUser.setText("user");
        lblUser.setName("lblUser"); // NOI18N

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.gif"))); // NOI18N
        btnClose.setText("Tutup");
        btnClose.setName("btnClose"); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        btnClose.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCloseKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnTambah)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnEdit)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnSimpan)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnHapus))
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnCari)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnSemua)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblUser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnClose)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 818, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEdit, btnHapus, btnSimpan, btnTambah});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTambah)
                            .addComponent(btnEdit)
                            .addComponent(btnSimpan)
                            .addComponent(btnHapus)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCari)
                    .addComponent(btnSemua, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClose)
                    .addComponent(lblUser)
                    .addComponent(jLabel2))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEdit, btnHapus, btnSimpan, btnTambah});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNamaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtNama.setEnabled(false);
            cmbSatuan.setEnabled(true);
            cmbSatuan.requestFocus();
        }
    }//GEN-LAST:event_txtNamaKeyPressed

    private void txtUkurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUkurKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtUkur.setEnabled(false);
            cmbUkur.setEnabled(true);
            cmbUkur.requestFocus();
        }
    }//GEN-LAST:event_txtUkurKeyPressed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        tambah();
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnTambahKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnTambahKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)tambah();
    }//GEN-LAST:event_btnTambahKeyPressed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        tblEdit();
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        simpan();
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnSimpanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSimpanKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) simpan();
    }//GEN-LAST:event_btnSimpanKeyPressed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        hapus();
    }//GEN-LAST:event_btnHapusActionPerformed

    private void txtHargaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jual();
            cmbNet.requestFocus();
        }
    }//GEN-LAST:event_txtHargaKeyPressed

    private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
        // TODO add your handling code here:
        cari();
    }//GEN-LAST:event_btnCariActionPerformed

    private void btnCariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCariKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) cari();
    }//GEN-LAST:event_btnCariKeyPressed

    private void btnSemuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSemuaActionPerformed
        // TODO add your handling code here:
         tampilTabel();
    }//GEN-LAST:event_btnSemuaActionPerformed

    private void btnSemuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnSemuaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) tampilTabel();
    }//GEN-LAST:event_btnSemuaKeyPressed

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        // TODO add your handling code here:
        atur(false);
        btnTambah.setText("Tambah");
        btnEdit.setText("Edit");
        kosong();
        if (tabMode.getRowCount() > 0) {
            tampilTeks(0);
            cari(true);
        } else {
            btnHapus.setEnabled(false);
            btnEdit.setEnabled(false);
            cari(false);
        }
        MainMenu.menu(true);
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void txtStokKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStokKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            cmbProd.requestFocus();
        }
    }//GEN-LAST:event_txtStokKeyPressed

    private void cmbJenisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbJenisKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            cmbJenis.setEnabled(false);
            txtNama.setEnabled(true);
            txtNama.requestFocus();
            txtNama.selectAll();
        }
    }//GEN-LAST:event_cmbJenisKeyPressed

    private void cmbSatuanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbSatuanKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            cmbSatuan.setEnabled(false);
            txtUkur.setEnabled(true);
            txtUkur.requestFocus();
            txtUkur.selectAll();
        }
    }//GEN-LAST:event_cmbSatuanKeyPressed

    private void cmbUkurKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbUkurKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            gabung();
        }
    }//GEN-LAST:event_cmbUkurKeyPressed

    private void cmbNetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbNetKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            jual();
            txtStok.requestFocus();
            txtStok.selectAll();
        }
    }//GEN-LAST:event_cmbNetKeyPressed

    private void cmbProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cmbProdKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) btnSimpan.requestFocus();
    }//GEN-LAST:event_cmbProdKeyPressed

    private void btnEditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnEditKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) tblEdit();
    }//GEN-LAST:event_btnEditKeyPressed

    private void btnHapusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnHapusKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER) hapus();
    }//GEN-LAST:event_btnHapusKeyPressed

    private void btnCloseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCloseKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            atur(false);
            btnTambah.setText("Tambah");
            btnEdit.setText("Edit");
            kosong();
            if (tabMode.getRowCount() > 0) {
                tampilTeks(0);
                cari(true);
            } else {
                btnHapus.setEnabled(false);
                btnEdit.setEnabled(false);
                cari(false);
            }
            MainMenu.menu(true); dispose();
        }
    }//GEN-LAST:event_btnCloseKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.swing.JButton btnCari;
    protected javax.swing.JButton btnClose;
    protected javax.swing.JButton btnEdit;
    protected javax.swing.JButton btnHapus;
    protected javax.swing.JButton btnSemua;
    protected javax.swing.JButton btnSimpan;
    protected javax.swing.JButton btnTambah;
    protected javax.swing.JComboBox cmbJenis;
    protected javax.swing.JComboBox cmbNet;
    protected javax.swing.JComboBox cmbProd;
    protected javax.swing.JComboBox cmbSatuan;
    protected javax.swing.JComboBox cmbUkur;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel10;
    protected javax.swing.JLabel jLabel11;
    protected javax.swing.JLabel jLabel12;
    protected javax.swing.JLabel jLabel14;
    protected javax.swing.JLabel jLabel2;
    protected javax.swing.JLabel jLabel3;
    protected javax.swing.JLabel jLabel4;
    protected javax.swing.JLabel jLabel5;
    protected javax.swing.JLabel jLabel6;
    protected javax.swing.JLabel jLabel7;
    protected javax.swing.JLabel jLabel9;
    protected javax.swing.JPanel jPanel1;
    protected javax.swing.JPanel jPanel2;
    protected javax.swing.JScrollPane jScrollPane1;
    protected static javax.swing.JLabel lblUser;
    public javax.swing.JTable tblObat;
    protected javax.swing.JTextField txtHarga;
    protected javax.swing.JTextField txtJual;
    protected javax.swing.JTextField txtKode;
    protected javax.swing.JTextField txtNama;
    protected javax.swing.JTextField txtStok;
    protected javax.swing.JTextField txtUkur;
    // End of variables declaration//GEN-END:variables
void cari(boolean ft)
    {
        btnCari.setEnabled(ft);
    }

    void atur(boolean ft)
	{
        cmbJenis.setEnabled(ft);
        txtNama.setEnabled(ft);
        cmbSatuan.setEnabled(ft);
        txtUkur.setEnabled(ft);
        cmbUkur.setEnabled(ft);
		txtHarga.setEnabled(ft);
        cmbNet.setEnabled(ft);
        cmbProd.setEnabled(ft);
        txtStok.setEnabled(ft);
		btnSimpan.setEnabled(ft);
        btnHapus.setEnabled(!ft);
		btnTambah.setEnabled(!ft);
		btnEdit.setEnabled(!ft);
	}

	void kosong()
	{
		txtKode.setText("");
		cmbJenis.setSelectedIndex(0);
		txtNama.setText("");
		cmbSatuan.setSelectedIndex(0);
		txtHarga.setText("0");
		txtStok.setText("0");
        cmbProd.setSelectedIndex(0);
        txtUkur.setText("0");
        cmbUkur.setSelectedIndex(0);
        txtJual.setText("0");
        cmbNet.setSelectedIndex(0);
	}

    void tblEdit()
    {
         if (btnEdit.getText().compareTo("Edit")==0) {
            kode();
            tampilTeks(n);
            btnEdit.setEnabled(true);
            btnTambah.setEnabled(false);
            btnSimpan.setEnabled(true);
            cmbJenis.setEnabled(false);
            data = false;
            btnEdit.setText("Batal");
            txtHarga.setEnabled(true);
            cmbNet.setEnabled(true);
            cmbProd.setEnabled(true);
            txtStok.setEnabled(true);
            txtHarga.requestFocus();
            txtHarga.selectAll();
        } else if (btnEdit.getText().compareTo("Edit")!=0) {
            atur(false);
            btnEdit.setText("Edit");
            tampilTeks(n);
        }
    }

    void hapus()
    {
        int respon = JOptionPane.showConfirmDialog(this,
                "Apakah data akan dihapus?\n"+
                "Kode : "+ txtKode.getText()+"\n" +
                "Nama : "+txtNama.getText()+ "\n",
                "Penghapusan Data",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (respon == 0) {
            try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                String sql = "DELETE FROM obat WHERE kdobat ='" + txtKode.getText() + "'";
                stmt.executeUpdate(sql);
                stmt.close();
                con.close();
                JOptionPane.showMessageDialog(this,"Data Berhasil Dihapus","Hapus Data",2);
                tampilTabel();
            }
            catch(SQLException e)
            {
                JOptionPane.showMessageDialog(this,"Data Gagal Dihapus","Hapus Data",2);
            }
        }
        if(tabMode.getRowCount() > 0) {tampilTeks(0);cari(true);} else {btnHapus.setEnabled(false);btnEdit.setEnabled(false);kosong();cari(false);}
    }


    void proses(String sql)
    {
        tblKosong();
        int a=1;
        try
        {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);

            while (rs.next())
            {
                String kdObat = rs.getString(1);
                String nmObat = rs.getString(2);
                String jenis = rs.getString(3);
                String satuan = rs.getString(4);
                String ukuran = rs.getString(5);
                String harga = Integer.toString(rs.getInt(6));
                String net = rs.getString(7);
                String jual = Integer.toString(rs.getInt(8));
                String stok = Integer.toString(rs.getInt(9));
                String produk = rs.getString(10);
                String no = Integer.toString(a);
                String dt[] = {no,kdObat,nmObat,jenis,satuan,ukuran,harga,net,jual,stok,produk};
                tabMode.addRow(dt);
                a++;
            }
            stmt.close();
        }
        catch(SQLException e)
        {}
    }

    void tampilTabel()
    {
        String sql = "SELECT * FROM obat ORDER BY kdobat ASC";
        tabMode = new DefaultTableModel(null, row);
        tblObat.setModel(tabMode);
        proses(sql);
    }

    public void tblKosong()
    {
        int rw = tabMode.getRowCount();
        for(int i=0; i<rw; i++)
        {
            tabMode.removeRow(rw);
        }
    }

    void tampilTeks(int row)
    {
        String JnsUkur = "" ,Ukur = "", kd = "", nm = "";
        String kode = tabMode.getValueAt(row, 1).toString();
        String nama = tabMode.getValueAt(row, 2).toString();
        String jenis = tabMode.getValueAt(row, 3).toString();
        String Satuan = tabMode.getValueAt(row, 4).toString();
        String Ukuran = tabMode.getValueAt(row, 5).toString();
        String harga = tabMode.getValueAt(row, 6).toString();
        String net = tabMode.getValueAt(row, 7).toString();
        String jual = tabMode.getValueAt(row, 8).toString();
        String stok = tabMode.getValueAt(row, 9).toString();
        String produk = tabMode.getValueAt(row, 10).toString();
        int pjg = Ukuran.length();

        //Pemotongan ukuran
        try {
            if (Integer.parseInt(Ukuran.substring(pjg - 2).replace('r', '0')
                    .replace('d', '0').replace('i', '0').replace('g', '0')
                    .replace('m', '0').replace('l', '0').replace('u', '0')
                    .replace('s', '0')) == 0)
                {
                    Ukur = Ukuran.substring(0,pjg-2);
                    JnsUkur = Ukuran.substring(pjg-2);
                }
            }

        catch (Exception e) {
            Ukur = "";
            JnsUkur = "-";
        }


        String sql = "SELECT * FROM supplier WHERE kdsup = '"+produk+"'";
        try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    kd = rs.getString(1);
                    nm = rs.getString(2);
                }
            }
            catch(SQLException e)
            {
            }

        cmbJenis.setSelectedItem(jenis);
        txtKode.setText(kode);
        txtNama.setText(nama);
        cmbSatuan.setSelectedItem(Satuan);
        txtUkur.setText(Ukur);
        cmbUkur.setSelectedItem(JnsUkur);
        txtHarga.setText(harga);
        txtStok.setText(stok);
        cmbProd.setSelectedItem(kd+" | " +nm);
        cmbNet.setSelectedItem(net);
        txtJual.setText(jual);
    }

    void jual()
    {
        int jual = Integer.parseInt(txtHarga.getText())+(Integer.parseInt(txtHarga.getText())
                *(Integer.parseInt(cmbNet.getSelectedItem().toString().substring(0,2)))/100);
        txtJual.setText(Integer.toString(jual));
    }

    void kode()
    {
      cmbProd.removeAllItems();
      String sql = "SELECT * FROM supplier ORDER BY kdsup ASC";
      try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                while(rs.next())
                {
                    String kd = rs.getString(1);
                    String nm = rs.getString(2);
                    cmbProd.addItem(kd+" | " +nm);
                }
            }
            catch(SQLException e)
            {
            }
    }

    void gabung()
    {
           //Penggabungan
        String ukur = txtUkur.getText() + cmbUkur.getSelectedItem().toString();
        int a = 0;
        try
        {
        Connection cn = new sqlConfig().db();
        Statement stm = cn.createStatement();
        ResultSet r = stm.executeQuery("Select count(*) FROM obat WHERE jenis='"+cmbJenis.getSelectedItem().toString()+"' and " +
                "nmobat='"+txtNama.getText()+"' and satuan='"+cmbSatuan.getSelectedItem().toString()+"' and ukuran='"+ukur+"'");
        r.next();
        a = r.getInt(1);
        }
        catch(SQLException e){}
        if( a == 1)
        {
          cmbJenis.setEnabled(true);
          cmbUkur.setEnabled(false);
          cmbUkur.hidePopup();
          JOptionPane.showMessageDialog(this, "Data Jenis, Nama, Satuan, Dan Ukuran Sudah Ada.\nCoba Data Lain.",getTitle(),JOptionPane.WARNING_MESSAGE);
          cmbJenis.requestFocus();
        }
        else
        {
            //K1 Variabel
            k1 = cmbJenis.getSelectedItem().toString().substring(0, 2).toUpperCase();


            //K2 Variabel
            k2 = Integer.toString(cmbSatuan.getSelectedIndex());
            if(k2.length() == 1) {
                k2 = "0" + k2;
            }

            //K3 Variabel
            if (txtNama.getText().length() <= 3)
            {
                k3 = txtNama.getText().toUpperCase();
            }
            else
            {
                k3 = txtNama.getText().substring(0, 3).toUpperCase();
            }

            //K4 Variabel
            String sql = "SELECT MAX(kdobat) FROM obat WHERE kdobat LIKE '"+ k1 + k2 + k3+"%'";

            try
            {
                Connection con = new sqlConfig().db();
                Statement stmt = con.createStatement();
                ResultSet rs = stmt.executeQuery(sql);
                if(rs.next())
                {
                    k4 = Integer.toString(Integer.parseInt(rs.getString(1).substring(7)) + 1);
                }
            }
            catch(Exception e)
            {
                k4 = "01";
            }

            if(k4.length() == 1) {
                k4 = "0" + k4;
            }

            txtKode.setText(k1 + k2 + k3 + k4);
            cmbUkur.setEnabled(false);
            btnSimpan.setEnabled(true);
            cmbNet.setEnabled(true);
            txtHarga.setEnabled(true);
            cmbProd.setEnabled(true);
            txtStok.setEnabled(true);
            txtHarga.requestFocus();
            txtHarga.selectAll();
        }
    }

    void tambah()
    {
        try {
            Connection con = new sqlConfig().db();
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT count(*) FROM supplier");
            rs.next();
            int z = rs.getInt(1);
            if (z==0)
            {
                JOptionPane.showMessageDialog(this, "Data Supplier Tidak Ada.\nIsi Data Supplier Dahulu.",getTitle(),JOptionPane.WARNING_MESSAGE);
            }
            else
            {
            if (btnTambah.getText().compareTo("Tambah") == 0) {
                kode();
                atur(true);
                cmbJenis.setEnabled(true);
                btnTambah.setEnabled(true);
                btnSimpan.setEnabled(false);
                txtNama.setEnabled(false);
                cmbSatuan.setEnabled(false);
                cmbNet.setEnabled(false);
                txtUkur.setEnabled(false);
                cmbUkur.setEnabled(false);
                txtHarga.setEnabled(false);
                cmbProd.setEnabled(false);
                txtStok.setEnabled(false);
                kosong();
                data = true;
                btnTambah.setText("Batal");
                cmbJenis.requestFocus();
            } else if (btnTambah.getText().compareTo("Tambah") != 0) {
                atur(false);
                btnTambah.setText("Tambah");
                kosong();
                if (tabMode.getRowCount() > 0) {
                    tampilTeks(0);
                    cari(true);
                } else {
                    btnHapus.setEnabled(false);
                    btnEdit.setEnabled(false);
                    cari(false);
                }
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(FileObat.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void simpan()
    {
        Object uk;
        String z = "";
        if(cmbUkur.getSelectedIndex() == 0)
        {
            uk = "";
        }
        else
        {
            uk = cmbUkur.getSelectedItem();
        }
        if(data==true)
        {
            z = "Penambahan Data";
        }
        else if(data==false)
        {
            z = "Perubahan Data";
        }
        int as = cmbProd.getSelectedItem().toString().length();
        int respon = JOptionPane.showConfirmDialog(this,
                "Apakah data akan dimasukkan ke database?\n"+
                "Kode : "+ txtKode.getText()+"\n" +
                "Jenis : Obat "+ cmbJenis.getSelectedItem()+"\n" +
                "Nama : "+txtNama.getText()+"\n"+
                "Satuan : "+cmbSatuan.getSelectedItem()+"\n" +
                "Ukuran : "+txtUkur.getText()+cmbUkur.getSelectedItem()+"\n"+
                "Harga : Rp. "+txtHarga.getText()+"\n"+
                "Keuntungan : "+cmbNet.getSelectedItem()+"\n"+
                "Harga Jual : Rp. "+txtJual.getText()+"\n"+
                "Produksi : "+cmbProd.getSelectedItem().toString().substring(8,as),
                z,
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);
        if (respon == 0) {
            if(data == true) {
                try {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    String sql = "INSERT INTO obat VALUES ('" + txtKode.getText() + "','" + txtNama.getText()+"','" + cmbJenis.getSelectedItem() +
                            "','" + cmbSatuan.getSelectedItem() +
                            "','" + txtUkur.getText() + cmbUkur.getSelectedItem() +"',"+ txtHarga.getText() + ",'" + cmbNet.getSelectedItem() +
                            "'," + txtJual.getText() + "," + txtStok.getText() + ",'" + cmbProd.getSelectedItem().toString().substring(0,5) +
                            "')";
                    stmt.executeUpdate(sql);
                    stmt.close();
                    con.close();
                    JOptionPane.showMessageDialog(this,"Data Berhasil Ditambah","Tambah Data",2);
                    tampilTabel();
                    tampilTeks(0);
                    if(tabMode.getRowCount() > 0) {tampilTeks(0);cari(true);} else {btnHapus.setEnabled(false);btnEdit.setEnabled(false);cari(false);}
                } catch(SQLException e) {
                    JOptionPane.showMessageDialog(this,"Data Gagal Ditambah","Tambah Data",2);
                }
                btnTambah.setText("Tambah");
                
            } else if(data == false) {
                try {
                    Connection con = new sqlConfig().db();
                    Statement stmt = con.createStatement();
                    String sql = "UPDATE obat SET hrgBeliObat =" + txtHarga.getText() + ", net = '"+cmbNet.getSelectedItem()+
                            "', hrgJualObat =" + txtJual.getText() + ", stok =" + txtStok.getText() + ", kdsup = '" +
                            cmbProd.getSelectedItem().toString().substring(0,5) + "' WHERE kdobat ='" + txtKode.getText() + "'";
                    stmt.executeUpdate(sql);
                    stmt.close();
                    con.close();
                    JOptionPane.showMessageDialog(this,"Data Berhasil Diupdate","Update Data",2);
                    tampilTabel();
                    if(tabMode.getRowCount() > 0) {tampilTeks(0);cari(true);} else {btnHapus.setEnabled(false);btnEdit.setEnabled(false);cari(false);}
                } catch(SQLException e) {
                    JOptionPane.showMessageDialog(this,"Data Gagal Diupdate","Update Data",2);
                }
                btnEdit.setText("Edit");
                tampilTeks(0);
            }
            atur(false);
            

        }
    }

    void cari()
    {
        tampilTabel();
        String cari = JOptionPane.showInputDialog(null,"Masukkan Kode Obat atau Nama Obat","Pencarian Data",JOptionPane.YES_OPTION);
        String sql = "SELECT * FROM obat WHERE kdobat LIKE '" + cari + "' OR nmobat LIKE '" + cari + "'";
        tabMode = new DefaultTableModel(null, row);
        tblObat.setModel(tabMode);
        proses(sql);
        if(tabMode.getRowCount() <= 0)
        {
            if(cari==null || cari.isEmpty()==true){cari="";JOptionPane.showMessageDialog(null, "Pencarian dibatalkan");}
            else JOptionPane.showMessageDialog(null, "Data Dengan Pencarian [" + cari + "] Tidak Ditemukan");
            tampilTabel();
            tampilTeks(0);
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Ditemukan Data Dengan Pencarian [" + cari + "]");
            tampilTeks(0);
        }
    }
}
